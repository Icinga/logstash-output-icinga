[[plugins-outputs-icinga]]
=== icinga

* Version: 1.0.0
* Released on: May 10, 2017
* https://github.com/Icinga/logstash-output-icinga/blob/master/CHANGELOG.md#010[Changelog]


==== Installation

For plugins not bundled by default, it is easy to install by running `bin/logstash-plugin install logstash-output-icinga`. See <<working-with-plugins>> for more details.


==== Getting Help

For questions about the plugin, open a topic in the http://discuss.elastic.co[Discuss] forums. For bugs or feature requests, open an issue in https://github.com/elastic/logstash[Github].
For the list of Elastic supported plugins, please consult the https://www.elastic.co/support/matrix#show_logstash_plugins[Elastic Support Matrix].

==== Description


This plugin runs actions on an Icinga server by calling its API. The Icinga API is available since version 2.4.
It replaces the formerly used command pipe by providing a similiar interface with filter capabilities. Actions are
used in order to process check results, manage downtimes, tell Icinga to send notifications and so on.

This plugin handles a defined set of actions. A list of all Icinga actions is avaiable in the
https://docs.icinga.com/icinga2/latest/doc/module/icinga2/chapter/icinga2-api#icinga2-api-actions[Icinga Docs].

Examples:

. Process a check result based on syslog severity

[source,ruby]
    filter {
      if [syslog_severity] == "error" {
        mutate {
          replace => { "exit_status" => "2" }
        }
      }
    }
    output {
      icinga {
        host           => 'demo.icinga.com'
        user           => 'icinga'
        password       => 'supersecret'
        action         => 'process-check-result'
        action_config  => {
          exit_status   => "%{exit_status}"
          plugin_output => "%{message}"
        }
        icinga_host    => "%{hostname}"
        icinga_service => "dummy"
      }
    }

. Set a downtime of 2 hours, starting from now

[source,ruby]
    filter {
      ruby { code => "event.set('start_time', Time.now.to_i)" }
      ruby { code => "event.set('end_time', Time.now.to_i + 7200)" }
    }
    output {
      icinga {
        host           => 'demo'
        user           => 'root'
        password       => 'icinga'
        ssl_verify     => false
        action         => 'schedule-downtime'
        action_config  => {
          author     => "logstash"
          comment    => "Downtime set by Logstash Output"
          start_time => "%{start_time}"
          end_time   => "%{end_time}"
        }
        icinga_host    => '%{hostname}'
        icinga_service => 'dummy'
      }


&nbsp;

==== Synopsis

This plugin supports the following configuration options:

Required configuration options:

[source,json]
--------------------------
icinga {
    action => ...
    action_config => ...
    icinga_host => ...
    password => ...
    user => ...
}
--------------------------



Available configuration options:

[cols="<,<,<",options="header",]
|=======================================================================
|Setting |Input type|Required
| <<plugins-outputs-icinga-action>> |<<string,string>>, one of `["process-check-result", "send-custom-notification", "add-comment", "remove-comment", "schedule-downtime", "remove-downtime"]`|Yes
| <<plugins-outputs-icinga-action_config>> |<<hash,hash>>|Yes
| <<plugins-outputs-icinga-codec>> |<<codec,codec>>|No
| <<plugins-outputs-icinga-enable_metric>> |<<boolean,boolean>>|No
| <<plugins-outputs-icinga-host>> |<<array,array>>|No
| <<plugins-outputs-icinga-icinga_host>> |<<string,string>>|Yes
| <<plugins-outputs-icinga-icinga_service>> |<<string,string>>|No
| <<plugins-outputs-icinga-id>> |<<string,string>>|No
| <<plugins-outputs-icinga-password>> |<<password,password>>|Yes
| <<plugins-outputs-icinga-port>> |<<number,number>>|No
| <<plugins-outputs-icinga-ssl_verify>> |<<boolean,boolean>>|No
| <<plugins-outputs-icinga-user>> |<<string,string>>|Yes
| <<plugins-outputs-icinga-workers>> |<<,>>|No
|=======================================================================


==== Details

&nbsp;

[[plugins-outputs-icinga-action]]
===== `action` 

  * This is a required setting.
  * Value can be any of: `process-check-result`, `send-custom-notification`, `add-comment`, `remove-comment`, `schedule-downtime`, `remove-downtime`
  * There is no default value for this setting.

All actions must target an `icinga_host` or an `icinga_service`.
[cols="<,<",]
|=======================================================================
|Action |Description
| <<process-check-result,process-check-result>> |Process a check result.
| <<send-custom-notification,send-custom-notification>> |Send a custom notification.
| <<add-comment,add-comment>> |Add a comment from an author.
| <<remove-comment,remove-comment>> |Remove all comments created by a certain author.
| <<schedule-downtime,schedule-downtime>> |Schedule a downtime for a host or service.
| <<remove-downtime,remove-downtime>> |Remove all downtimes created by a certain author.
|=======================================================================

[[plugins-outputs-icinga-action_config]]
===== `action_config` 

  * This is a required setting.
  * Value type is <<hash,hash>>
  * There is no default value for this setting.

Each action has its own parameters. Values of settings inside of `action_config` may include existing fields.

[source,ruby]
    icinga {
      [...]
      action        => "add-comment"
      action_config => {
        author  => "%{somefield}_logstash"
        comment => "%{message}"
      }
    }

====== `process-check-result`
[cols="<,<,<",]
|=======================================================================
|Setting |Input type|Required
| `exit_status` |<<number,number>>, For services: 0=OK, 1=WARNING, 2=CRITICAL, 3=UNKNOWN, for hosts: 0=OK, 1=CRITICAL.|Yes
| `plugin_output` |<<string,string>>, The plugins main output. Does not contain the performance data.|Yes
| `performance_data` |<<array,array>>, The performance data.|No
| `check_command` |<<array,array>>, The first entry should be the check commands path, then one entry for each command line option followed by an entry for each of its argument.|No
| `check_source` |<<string,string>>, Usually the name of the `command_endpoint`|No
|=======================================================================

====== `send-custom-notification`
[cols="<,<,<",]
|=======================================================================
|Setting |Input type|Required
| `author` |<<string,string>>, Name of the author.|Yes
| `comment` |<<string,string>>, Comment text.|Yes
| `force` |<<boolean,boolean>>, Default: `false`. If `true`, the notification is sent regardless of downtimes or whether notifications are enabled or not.|No
|=======================================================================

====== `add-comment`
[cols="<,<,<",]
|=======================================================================
|Setting |Input type|Required
| `author` |<<string,string>>, Name of the author.|Yes
| `comment` |<<string,string>>, Comment text.|Yes
|=======================================================================

====== `remove-comment`
[cols="<,<,<",]
|=======================================================================
|Setting |Input type|Required
| `author` |<<string,string>>, Name of the author.|Yes
|=======================================================================

====== `schedule-downtime`
[cols="<,<,<",]
|=======================================================================
|Setting |Input type|Required
| `author` |<<string,string>>, Name of the author.|Yes
| `comment` |<<string,string>>, Comment text.|Yes
| `start_time` |<<timestamp (epoc),timestamp (epoc)>>, Timestamp marking the beginning of the downtime.|Yes
| `end_time` |<<timestamp (epoc),timestamp (epoc)>>, Timestamp marking the end of the downtime.|Yes
| `fixed` |<<boolean,boolean>>, Defaults to `true`. If `true`, the downtime is fixed otherwise flexible.|No
| `duration` |<<number,number>>, Duration of the downtime in seconds if fixed is set to `false`.|Required for flexible downtimes
| `trigger_name` |<<string,string>>, Sets the trigger for a triggered downtime.|No
| `child_options` |<<number,number>>, Schedule child downtimes. `0` does not do anything, `1` schedules child downtimes triggered by this downtime, `2` schedules non-triggered downtimes. Defaults to `0`.|No
|=======================================================================

====== `remove-downtime`
[cols="<,<,<",]
|=======================================================================
|Setting |Input type|Required
| `author` |<<string,string>>, Name of the author.|Yes
|=======================================================================

Detailed information about each action are listed in the
https://docs.icinga.com/icinga2/latest/doc/module/icinga2/chapter/icinga2-api#icinga2-api-actions[Icinga Docs]

[[plugins-outputs-icinga-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for output data. Output codecs are a convenient method for encoding your data before it leaves the output, without needing a separate filter in your Logstash pipeline.

[[plugins-outputs-icinga-enable_metric]]
===== `enable_metric` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Disable or enable metric logging for this specific plugin instance
by default we record all the metrics we can, but you can disable metrics collection
for a specific plugin.

[[plugins-outputs-icinga-host]]
===== `host` 

  * Value type is <<array,array>>
  * Default value is `["127.0.0.1"]`

The hostname(s) of your Icinga server. If the hosts list is an array, Logstash will send the action to the first
entry in the list. If it disconnects, the same request will be processed to the next host. An action is send to each
host in the list, until one is accepts it. If all hosts are unavailable, the action is discarded. Ports can be
specified on any hostname, which will override the global port config.

For example:
[source,ruby]
    "127.0.0.1"
    ["127.0.0.1", "127.0.0.2"]
    ["127.0.0.1:5665", "127.0.0.2"]

[[plugins-outputs-icinga-icinga_host]]
===== `icinga_host` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

The Icinga `Host` object. This field may include existing fields.

[source,ruby]
    icinga {
      [...]
      icinga_host => "%{hostname}"
    }

[[plugins-outputs-icinga-icinga_service]]
===== `icinga_service` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

The Icinga `Service` object. This field may include existing fields.

[source,ruby]
    icinga {
      [...]
      icinga_host => "%{hostname}"
      icinga_service => "%{program}"
    }

[[plugins-outputs-icinga-id]]
===== `id` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a unique `ID` to the plugin configuration. If no ID is specified, Logstash will generate one. 
It is strongly recommended to set this ID in your configuration. This is particulary useful 
when you have two or more plugins of the same type, for example, if you have 2 grok filters. 
Adding a named ID in this case will help in monitoring Logstash when using the monitoring APIs.

[source,ruby]
---------------------------------------------------------------------------------------------------
output {
 stdout {
   id => "my_plugin_id"
 }
}
---------------------------------------------------------------------------------------------------


[[plugins-outputs-icinga-password]]
===== `password` 

  * This is a required setting.
  * Value type is <<password,password>>
  * There is no default value for this setting.

Password of the Icinga API user

[[plugins-outputs-icinga-port]]
===== `port` 

  * Value type is <<number,number>>
  * Default value is `5665`

Global port configuration. Can be overriten on any hostname.

[[plugins-outputs-icinga-ssl_verify]]
===== `ssl_verify` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Connecting to the Icinga API is only available through SSL encryption. Set this setting to `false` to disable SSL
verification.

[[plugins-outputs-icinga-user]]
===== `user` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

The Icinga API user. This user must exist on your Icinga server. It is an object of the type 'ApiUser'. Make sure
this user has sufficient permissions to run the actions you configure. Learn about it in the
https://docs.icinga.com/icinga2/latest/doc/module/icinga2/chapter/object-types#objecttype-apiuser[Icinga documentation about ApiUser].

[[plugins-outputs-icinga-workers]]
===== `workers` 

  * Value type is <<string,string>>
  * Default value is `1`

when we no longer support the :legacy type
This is hacky, but it can only be herne


